% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval.R
\name{r_eval}
\alias{r_eval}
\title{Evaluate an expression in another R session}
\usage{
r_eval(func, args = list(), mode = c("vanilla", "copycat", "expert"), ...)
}
\arguments{
\item{func}{Function object to call in the new R process.}

\item{args}{Arguments to pass to the function.}

\item{mode}{How to set up the other R session. See details below.}

\item{...}{Extra arguments, used in expert mode.}
}
\value{
Value of the evaluated expression.
}
\description{
Supported modes: \itemize{
\item \sQuote{vanilla} Do not load any startup files, and
  use a temporary empty package library. It tries to imitate
  an empty vanilla R session. Note that it does not set
  \code{options("repos")} currently, so if you want to use
  a CRAN mirror, you need to set that.
\item \sQuote{copycat} Try to mimic the settings from the
  current R session: startup files, package libraries,
  loaded and attached packages, and the \code{options("repos")}
  settings will be replicated in the new R session. Not yet
  implemented.
\item \sQuote{expert} Various parameters can be set up manually.
  See parameters below.
}
}
\details{
Parameters in expert mode: \itemize{
\item \sQuote{libpath} The library path. Defaults to the current
  library path in expert mode.
\item \sQuote{repos} The \sQuote{repos} option. Defaults to
  \code{getOption("repos")} in expert mode.
}
}
\section{Setting environment variables}{


\code{callr} itself does not support setting environment variables
for the child process, because this can be done easily with other
tools. In particular, you can call \code{callr} withing the
the \code{withr} package's \code{with_envvar} function:

\preformatted{  withr::with_envvar(
    c(CALL_R_TESTING = "foobar"),
    r_eval(function() Sys.getenv("CALL_R_TESTING"))
  )}
}

\section{Setting the path}{


Similarly to environment variables, the PATH can be set using
the \code{withr} package:

\preformatted{  withr::with_path(
    "/bin", action = "replace",
    r_eval(function() Sys.getenv("PATH"))
  )}
}
\examples{

# Workspace is empty in vanilla mode
r_eval(ls)

# library path is "empty" in vanilla mode
r_eval(.libPaths)

# This should ideally only include base and recommended packages
r_eval(installed.packages)

}

